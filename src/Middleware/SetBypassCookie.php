<?php

namespace DT\Home\Middleware;

use DT\Home\Psr\Http\Message\ResponseInterface;
use DT\Home\Psr\Http\Message\ServerRequestInterface;
use DT\Home\Psr\Http\Server\MiddlewareInterface;
use DT\Home\Psr\Http\Server\RequestHandlerInterface;

class SetBypassCookie implements MiddlewareInterface {

    protected $value;

    /**
     * Process the request by setting a cookie with the bypass value.
     *
     * @param ServerRequestInterface $request The server request to process.
     * @param RequestHandlerInterface $handler The request handler to handle the request.
     * @return ResponseInterface The response generated by the request handler.
     */
    public function process( ServerRequestInterface $request, RequestHandlerInterface $handler ): ResponseInterface
    {
        setcookie( 'DT_HOME', $this->get_bypass_value(), time() + 600, '/' );

        return $handler->handle( $request );
    }

    /**
     * Returns the bypass value generated by combining the session ID, session token, and current timestamp.
     *
     * @return string The generated bypass value.
     */
    public function get_bypass_value(): string
    {
        return md5( session_id() . wp_get_session_token() . time() );
    }
}
